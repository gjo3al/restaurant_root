//母專案不需要任何東西

plugins {

		//要放在子專案中的plugin，apply false代表不在本專案中使用，參考下方
		//https://docs.gradle.org/3.0/release-notes.html#improved-plugins-dsl
		id 'org.springframework.boot' version '2.1.7.RELEASE' apply false
	}
	
//子專案通用設定
//考慮到子專案都是用STS建立，如果沒有特別的設定，subprojects可考慮刪除
subprojects {
	
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

	//gradle.properties中可設定參數
	sourceCompatibility = theSourceCompatibility
	targetCompatibility = theSourceCompatibility

	repositories {
    	mavenCentral()
	}
	
	dependencies {
	
		//大部分子專案只是函示庫，不需要執行，可只留測試用的依賴
		//implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
	/*
	以下為可能用到的設定
	處理classpath相關設定
	http://www.codedata.com.tw/java/understanding-gradle-4-java-project-build-script-customization/
	sourceSets {
		
		排除或新增classpath路徑
		main {
			java {
				exclude 'src/test/java/**'
			}
			resources {
				srcDir '../academy-shared/src/main/resources'
				exclude 'src/test/resources/**'
			}
		}
			
		test {
			java {
				srcDir '../academy-shared/src/test/java'
			}
			resources {
				srcDir '../academy-shared/src/test/resources'
			}
		}
	}
	*/
}

//子專案之間的依賴
project(':restaurant_shared') {

    dependencies {
    }
}

//這個子專案為入口，可在此測試
project(':restaurant_member') {
	dependencies {
		
		//api 與  implementation 的差別
		//https://yuweiguocn.github.io/gradle-new-dependency-configurations/
		api project(':restaurant_shared')
    }
}

project(':restaurant_menu') {

    dependencies {
    }
}


